/* tslint:disable */
/* eslint-disable */
/**
 * Developer API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CustomerAttributes } from './CustomerAttributes';
import {
    CustomerAttributesFromJSON,
    CustomerAttributesFromJSONTyped,
    CustomerAttributesToJSON,
    CustomerAttributesToJSONTyped,
} from './CustomerAttributes';
import type { ExperimentEnrollment } from './ExperimentEnrollment';
import {
    ExperimentEnrollmentFromJSON,
    ExperimentEnrollmentFromJSONTyped,
    ExperimentEnrollmentToJSON,
    ExperimentEnrollmentToJSONTyped,
} from './ExperimentEnrollment';
import type { CustomerActiveEntitlements } from './CustomerActiveEntitlements';
import {
    CustomerActiveEntitlementsFromJSON,
    CustomerActiveEntitlementsFromJSONTyped,
    CustomerActiveEntitlementsToJSON,
    CustomerActiveEntitlementsToJSONTyped,
} from './CustomerActiveEntitlements';

/**
 * 
 * @export
 * @interface Customer
 */
export interface Customer {
    /**
     * String representing the object's type. Objects of the same type share the same value.
     * @type {string}
     * @memberof Customer
     */
    object: CustomerObjectEnum;
    /**
     * 
     * @type {string}
     * @memberof Customer
     */
    id: string;
    /**
     * ID of the project to which the customer belongs
     * @type {string}
     * @memberof Customer
     */
    projectId: string;
    /**
     * The first time the customer was seen
     * @type {number}
     * @memberof Customer
     */
    firstSeenAt: number;
    /**
     * The last time the customer was seen
     * @type {number}
     * @memberof Customer
     */
    lastSeenAt: number | null;
    /**
     * The last app version the customer was seen on
     * @type {string}
     * @memberof Customer
     */
    lastSeenAppVersion: string | null;
    /**
     * The last country the customer was seen in
     * @type {string}
     * @memberof Customer
     */
    lastSeenCountry: string | null;
    /**
     * The last platform the customer was seen on
     * @type {string}
     * @memberof Customer
     */
    lastSeenPlatform: string | null;
    /**
     * The last platform version the customer was seen on
     * @type {string}
     * @memberof Customer
     */
    lastSeenPlatformVersion: string | null;
    /**
     * 
     * @type {CustomerActiveEntitlements}
     * @memberof Customer
     */
    activeEntitlements?: CustomerActiveEntitlements;
    /**
     * 
     * @type {ExperimentEnrollment}
     * @memberof Customer
     */
    experiment?: ExperimentEnrollment | null;
    /**
     * 
     * @type {CustomerAttributes}
     * @memberof Customer
     */
    attributes?: CustomerAttributes;
}


/**
 * @export
 */
export const CustomerObjectEnum = {
    Customer: 'customer'
} as const;
export type CustomerObjectEnum = typeof CustomerObjectEnum[keyof typeof CustomerObjectEnum];


/**
 * Check if a given object implements the Customer interface.
 */
export function instanceOfCustomer(value: object): value is Customer {
    if (!('object' in value) || value['object'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('projectId' in value) || value['projectId'] === undefined) return false;
    if (!('firstSeenAt' in value) || value['firstSeenAt'] === undefined) return false;
    if (!('lastSeenAt' in value) || value['lastSeenAt'] === undefined) return false;
    if (!('lastSeenAppVersion' in value) || value['lastSeenAppVersion'] === undefined) return false;
    if (!('lastSeenCountry' in value) || value['lastSeenCountry'] === undefined) return false;
    if (!('lastSeenPlatform' in value) || value['lastSeenPlatform'] === undefined) return false;
    if (!('lastSeenPlatformVersion' in value) || value['lastSeenPlatformVersion'] === undefined) return false;
    return true;
}

export function CustomerFromJSON(json: any): Customer {
    return CustomerFromJSONTyped(json, false);
}

export function CustomerFromJSONTyped(json: any, ignoreDiscriminator: boolean): Customer {
    if (json == null) {
        return json;
    }
    return {
        
        'object': json['object'],
        'id': json['id'],
        'projectId': json['project_id'],
        'firstSeenAt': json['first_seen_at'],
        'lastSeenAt': json['last_seen_at'],
        'lastSeenAppVersion': json['last_seen_app_version'],
        'lastSeenCountry': json['last_seen_country'],
        'lastSeenPlatform': json['last_seen_platform'],
        'lastSeenPlatformVersion': json['last_seen_platform_version'],
        'activeEntitlements': json['active_entitlements'] == null ? undefined : CustomerActiveEntitlementsFromJSON(json['active_entitlements']),
        'experiment': json['experiment'] == null ? undefined : ExperimentEnrollmentFromJSON(json['experiment']),
        'attributes': json['attributes'] == null ? undefined : CustomerAttributesFromJSON(json['attributes']),
    };
}

export function CustomerToJSON(json: any): Customer {
    return CustomerToJSONTyped(json, false);
}

export function CustomerToJSONTyped(value?: Customer | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'object': value['object'],
        'id': value['id'],
        'project_id': value['projectId'],
        'first_seen_at': value['firstSeenAt'],
        'last_seen_at': value['lastSeenAt'],
        'last_seen_app_version': value['lastSeenAppVersion'],
        'last_seen_country': value['lastSeenCountry'],
        'last_seen_platform': value['lastSeenPlatform'],
        'last_seen_platform_version': value['lastSeenPlatformVersion'],
        'active_entitlements': CustomerActiveEntitlementsToJSON(value['activeEntitlements']),
        'experiment': ExperimentEnrollmentToJSON(value['experiment']),
        'attributes': CustomerAttributesToJSON(value['attributes']),
    };
}

