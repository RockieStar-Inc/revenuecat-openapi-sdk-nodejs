/* tslint:disable */
/* eslint-disable */
/**
 * Developer API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AuthenticatedManagementUrl
 */
export interface AuthenticatedManagementUrl {
    /**
     * String representing the object's type. Objects of the same type share the same value.
     * @type {string}
     * @memberof AuthenticatedManagementUrl
     */
    object: AuthenticatedManagementUrlObjectEnum;
    /**
     * A secure, single-use URL that provides temporary access to the customer portal for a specific customer. This URL can only be used once and expires after use.
     * @type {string}
     * @memberof AuthenticatedManagementUrl
     */
    managementUrl: string;
}


/**
 * @export
 */
export const AuthenticatedManagementUrlObjectEnum = {
    AuthenticatedManagementUrl: 'authenticated_management_url'
} as const;
export type AuthenticatedManagementUrlObjectEnum = typeof AuthenticatedManagementUrlObjectEnum[keyof typeof AuthenticatedManagementUrlObjectEnum];


/**
 * Check if a given object implements the AuthenticatedManagementUrl interface.
 */
export function instanceOfAuthenticatedManagementUrl(value: object): value is AuthenticatedManagementUrl {
    if (!('object' in value) || value['object'] === undefined) return false;
    if (!('managementUrl' in value) || value['managementUrl'] === undefined) return false;
    return true;
}

export function AuthenticatedManagementUrlFromJSON(json: any): AuthenticatedManagementUrl {
    return AuthenticatedManagementUrlFromJSONTyped(json, false);
}

export function AuthenticatedManagementUrlFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuthenticatedManagementUrl {
    if (json == null) {
        return json;
    }
    return {
        
        'object': json['object'],
        'managementUrl': json['management_url'],
    };
}

export function AuthenticatedManagementUrlToJSON(json: any): AuthenticatedManagementUrl {
    return AuthenticatedManagementUrlToJSONTyped(json, false);
}

export function AuthenticatedManagementUrlToJSONTyped(value?: AuthenticatedManagementUrl | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'object': value['object'],
        'management_url': value['managementUrl'],
    };
}

