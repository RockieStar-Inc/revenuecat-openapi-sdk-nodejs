/* tslint:disable */
/* eslint-disable */
/**
 * Developer API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface InlineObject5
 */
export interface InlineObject5 {
    /**
     * String representing the object's type. Objects of the same type share the same value.
     * @type {string}
     * @memberof InlineObject5
     */
    object: InlineObject5ObjectEnum;
    /**
     * 
     * @type {string}
     * @memberof InlineObject5
     */
    type: InlineObject5TypeEnum;
    /**
     * If the error is parameter-specific, the parameter related to the error
     * @type {string}
     * @memberof InlineObject5
     */
    param?: string | null;
    /**
     * A URL to more information about the error reported
     * @type {string}
     * @memberof InlineObject5
     */
    docUrl?: string;
    /**
     * A message describing the reason of the error
     * @type {string}
     * @memberof InlineObject5
     */
    message: string;
    /**
     * Indicates if the error is retryable or not
     * @type {boolean}
     * @memberof InlineObject5
     */
    retryable: boolean;
    /**
     * The ms the client should wait before retrying the request. Only present for retryable errors.
     * @type {number}
     * @memberof InlineObject5
     */
    backoffMs?: number | null;
}


/**
 * @export
 */
export const InlineObject5ObjectEnum = {
    Error: 'error'
} as const;
export type InlineObject5ObjectEnum = typeof InlineObject5ObjectEnum[keyof typeof InlineObject5ObjectEnum];

/**
 * @export
 */
export const InlineObject5TypeEnum = {
    ResourceMissing: 'resource_missing'
} as const;
export type InlineObject5TypeEnum = typeof InlineObject5TypeEnum[keyof typeof InlineObject5TypeEnum];


/**
 * Check if a given object implements the InlineObject5 interface.
 */
export function instanceOfInlineObject5(value: object): value is InlineObject5 {
    if (!('object' in value) || value['object'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('message' in value) || value['message'] === undefined) return false;
    if (!('retryable' in value) || value['retryable'] === undefined) return false;
    return true;
}

export function InlineObject5FromJSON(json: any): InlineObject5 {
    return InlineObject5FromJSONTyped(json, false);
}

export function InlineObject5FromJSONTyped(json: any, ignoreDiscriminator: boolean): InlineObject5 {
    if (json == null) {
        return json;
    }
    return {
        
        'object': json['object'],
        'type': json['type'],
        'param': json['param'] == null ? undefined : json['param'],
        'docUrl': json['doc_url'] == null ? undefined : json['doc_url'],
        'message': json['message'],
        'retryable': json['retryable'],
        'backoffMs': json['backoff_ms'] == null ? undefined : json['backoff_ms'],
    };
}

export function InlineObject5ToJSON(json: any): InlineObject5 {
    return InlineObject5ToJSONTyped(json, false);
}

export function InlineObject5ToJSONTyped(value?: InlineObject5 | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'object': value['object'],
        'type': value['type'],
        'param': value['param'],
        'doc_url': value['docUrl'],
        'message': value['message'],
        'retryable': value['retryable'],
        'backoff_ms': value['backoffMs'],
    };
}

