/* tslint:disable */
/* eslint-disable */
/**
 * Developer API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface StoreProduct
 */
export interface StoreProduct {
    /**
     * String representing the object's type. Objects of the same type share the same value.
     * @type {string}
     * @memberof StoreProduct
     */
    object: StoreProductObjectEnum;
    /**
     * The unique identifier of the product in the store (e.g., App Store Connect product ID)
     * @type {string}
     * @memberof StoreProduct
     */
    id: string;
    /**
     * The name of the store product
     * @type {string}
     * @memberof StoreProduct
     */
    name?: string | null;
    /**
     * The product identifier used in the store
     * @type {string}
     * @memberof StoreProduct
     */
    productIdentifier: string;
}


/**
 * @export
 */
export const StoreProductObjectEnum = {
    StoreProduct: 'store_product'
} as const;
export type StoreProductObjectEnum = typeof StoreProductObjectEnum[keyof typeof StoreProductObjectEnum];


/**
 * Check if a given object implements the StoreProduct interface.
 */
export function instanceOfStoreProduct(value: object): value is StoreProduct {
    if (!('object' in value) || value['object'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('productIdentifier' in value) || value['productIdentifier'] === undefined) return false;
    return true;
}

export function StoreProductFromJSON(json: any): StoreProduct {
    return StoreProductFromJSONTyped(json, false);
}

export function StoreProductFromJSONTyped(json: any, ignoreDiscriminator: boolean): StoreProduct {
    if (json == null) {
        return json;
    }
    return {
        
        'object': json['object'],
        'id': json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'productIdentifier': json['product_identifier'],
    };
}

export function StoreProductToJSON(json: any): StoreProduct {
    return StoreProductToJSONTyped(json, false);
}

export function StoreProductToJSONTyped(value?: StoreProduct | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'object': value['object'],
        'id': value['id'],
        'name': value['name'],
        'product_identifier': value['productIdentifier'],
    };
}

