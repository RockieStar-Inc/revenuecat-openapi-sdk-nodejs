/* tslint:disable */
/* eslint-disable */
/**
 * Developer API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SubscriptionTransaction
 */
export interface SubscriptionTransaction {
    /**
     * String representing the object's type. Objects of the same type share the same value.
     * @type {string}
     * @memberof SubscriptionTransaction
     */
    object: SubscriptionTransactionObjectEnum;
    /**
     * The ID of the subscription transaction in the store
     * @type {string}
     * @memberof SubscriptionTransaction
     */
    id: string;
    /**
     * The date of the transaction in ms since epoch
     * @type {number}
     * @memberof SubscriptionTransaction
     */
    purchasedAt: number;
}


/**
 * @export
 */
export const SubscriptionTransactionObjectEnum = {
    SubscriptionTransaction: 'subscription_transaction'
} as const;
export type SubscriptionTransactionObjectEnum = typeof SubscriptionTransactionObjectEnum[keyof typeof SubscriptionTransactionObjectEnum];


/**
 * Check if a given object implements the SubscriptionTransaction interface.
 */
export function instanceOfSubscriptionTransaction(value: object): value is SubscriptionTransaction {
    if (!('object' in value) || value['object'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('purchasedAt' in value) || value['purchasedAt'] === undefined) return false;
    return true;
}

export function SubscriptionTransactionFromJSON(json: any): SubscriptionTransaction {
    return SubscriptionTransactionFromJSONTyped(json, false);
}

export function SubscriptionTransactionFromJSONTyped(json: any, ignoreDiscriminator: boolean): SubscriptionTransaction {
    if (json == null) {
        return json;
    }
    return {
        
        'object': json['object'],
        'id': json['id'],
        'purchasedAt': json['purchased_at'],
    };
}

export function SubscriptionTransactionToJSON(json: any): SubscriptionTransaction {
    return SubscriptionTransactionToJSONTyped(json, false);
}

export function SubscriptionTransactionToJSONTyped(value?: SubscriptionTransaction | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'object': value['object'],
        'id': value['id'],
        'purchased_at': value['purchasedAt'],
    };
}

