/* tslint:disable */
/* eslint-disable */
/**
 * Developer API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CustomerAttribute
 */
export interface CustomerAttribute {
    /**
     * String representing the object's type. Objects of the same type share the same value.
     * @type {string}
     * @memberof CustomerAttribute
     */
    object: CustomerAttributeObjectEnum;
    /**
     * The name of the attribute. Reserved attributes are prefixed with a `$`.
     * @type {string}
     * @memberof CustomerAttribute
     */
    name: string;
    /**
     * The value of the attribute.
     * @type {string}
     * @memberof CustomerAttribute
     */
    value: string | null;
    /**
     * The time when the attribute was last updated.
     * @type {number}
     * @memberof CustomerAttribute
     */
    updatedAt: number;
}


/**
 * @export
 */
export const CustomerAttributeObjectEnum = {
    CustomerAttribute: 'customer.attribute'
} as const;
export type CustomerAttributeObjectEnum = typeof CustomerAttributeObjectEnum[keyof typeof CustomerAttributeObjectEnum];


/**
 * Check if a given object implements the CustomerAttribute interface.
 */
export function instanceOfCustomerAttribute(value: object): value is CustomerAttribute {
    if (!('object' in value) || value['object'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('value' in value) || value['value'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function CustomerAttributeFromJSON(json: any): CustomerAttribute {
    return CustomerAttributeFromJSONTyped(json, false);
}

export function CustomerAttributeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomerAttribute {
    if (json == null) {
        return json;
    }
    return {
        
        'object': json['object'],
        'name': json['name'],
        'value': json['value'],
        'updatedAt': json['updated_at'],
    };
}

export function CustomerAttributeToJSON(json: any): CustomerAttribute {
    return CustomerAttributeToJSONTyped(json, false);
}

export function CustomerAttributeToJSONTyped(value?: CustomerAttribute | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'object': value['object'],
        'name': value['name'],
        'value': value['value'],
        'updated_at': value['updatedAt'],
    };
}

