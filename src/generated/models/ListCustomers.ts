/* tslint:disable */
/* eslint-disable */
/**
 * Developer API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Customer } from './Customer';
import {
    CustomerFromJSON,
    CustomerFromJSONTyped,
    CustomerToJSON,
    CustomerToJSONTyped,
} from './Customer';

/**
 * 
 * @export
 * @interface ListCustomers
 */
export interface ListCustomers {
    /**
     * String representing the object's type. Objects of the same type share the same value. Always has the value `list`.
     * @type {string}
     * @memberof ListCustomers
     */
    object: ListCustomersObjectEnum;
    /**
     * Details about each object.
     * @type {Array<Customer>}
     * @memberof ListCustomers
     */
    items: Array<Customer>;
    /**
     * URL to access the next page of the project's customers. If not present / null, there is no next page
     * @type {string}
     * @memberof ListCustomers
     */
    nextPage: string | null;
    /**
     * The URL where this list can be accessed.
     * @type {string}
     * @memberof ListCustomers
     */
    url: string;
}


/**
 * @export
 */
export const ListCustomersObjectEnum = {
    List: 'list'
} as const;
export type ListCustomersObjectEnum = typeof ListCustomersObjectEnum[keyof typeof ListCustomersObjectEnum];


/**
 * Check if a given object implements the ListCustomers interface.
 */
export function instanceOfListCustomers(value: object): value is ListCustomers {
    if (!('object' in value) || value['object'] === undefined) return false;
    if (!('items' in value) || value['items'] === undefined) return false;
    if (!('nextPage' in value) || value['nextPage'] === undefined) return false;
    if (!('url' in value) || value['url'] === undefined) return false;
    return true;
}

export function ListCustomersFromJSON(json: any): ListCustomers {
    return ListCustomersFromJSONTyped(json, false);
}

export function ListCustomersFromJSONTyped(json: any, ignoreDiscriminator: boolean): ListCustomers {
    if (json == null) {
        return json;
    }
    return {
        
        'object': json['object'],
        'items': ((json['items'] as Array<any>).map(CustomerFromJSON)),
        'nextPage': json['next_page'],
        'url': json['url'],
    };
}

export function ListCustomersToJSON(json: any): ListCustomers {
    return ListCustomersToJSONTyped(json, false);
}

export function ListCustomersToJSONTyped(value?: ListCustomers | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'object': value['object'],
        'items': ((value['items'] as Array<any>).map(CustomerToJSON)),
        'next_page': value['nextPage'],
        'url': value['url'],
    };
}

