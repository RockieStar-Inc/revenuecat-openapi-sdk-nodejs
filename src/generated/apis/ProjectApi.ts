/* tslint:disable */
/* eslint-disable */
/**
 * Developer API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  InlineObject,
  InlineObject2,
  InlineObject3,
  InlineObject4,
  InlineObject5,
  InlineObject6,
  InlineObject7,
  ListProjects,
} from '../models/index';
import {
    InlineObjectFromJSON,
    InlineObjectToJSON,
    InlineObject2FromJSON,
    InlineObject2ToJSON,
    InlineObject3FromJSON,
    InlineObject3ToJSON,
    InlineObject4FromJSON,
    InlineObject4ToJSON,
    InlineObject5FromJSON,
    InlineObject5ToJSON,
    InlineObject6FromJSON,
    InlineObject6ToJSON,
    InlineObject7FromJSON,
    InlineObject7ToJSON,
    ListProjectsFromJSON,
    ListProjectsToJSON,
} from '../models/index';

export interface ListProjectsRequest {
    startingAfter?: string;
    limit?: number;
}

/**
 * 
 */
export class ProjectApi extends runtime.BaseAPI {

    /**
     * This endpoint requires the following permission(s): <code>project_configuration:projects:read</code>.
     * Get a list of projects
     */
    async listProjectsRaw(requestParameters: ListProjectsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ListProjects>> {
        const queryParameters: any = {};

        if (requestParameters['startingAfter'] != null) {
            queryParameters['starting_after'] = requestParameters['startingAfter'];
        }

        if (requestParameters['limit'] != null) {
            queryParameters['limit'] = requestParameters['limit'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("BearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/projects`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ListProjectsFromJSON(jsonValue));
    }

    /**
     * This endpoint requires the following permission(s): <code>project_configuration:projects:read</code>.
     * Get a list of projects
     */
    async listProjects(requestParameters: ListProjectsRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ListProjects> {
        const response = await this.listProjectsRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
